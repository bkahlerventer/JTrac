/** 
 * beanshell script to auto-generate a standard properties file from a
 * valid Maven 2 project (pom.xml).  The properties file once generated
 * will contain all information about dependencies and can be used by
 * an Ant script as well as a NetBeans project
 */

is = new FileInputStream("build.properties");
props = new Properties();
props.load(is);
is.close();

watijHome = props.getProperty("watij.home");

os = new FileOutputStream("build-deps.properties");
out = new PrintWriter(os);      
baseDir = mvn.getBaseDir();                       
out.write("# *** generated file - not created by hand! ***\n");
out.write("m2.repo=" + baseDir + "\n");
out.write("watij.home=" + watijHome + "\n");

// ===============================

out.write("test.jars=");
testArtifacts = project.getDependencyArtifacts();
testArtifacts.addAll(project.getTestArtifacts());
out.write(mvn.getPaths(mvn.getFiles(testArtifacts), baseDir, "${m2.repo}"));


if (watijHome == null) {
    print("*** warning: ${watij.home} is null");
} else {
    watijLibDir = new File(watijHome + "/lib");
    if (!watijLibDir.exists()) {
        print("*** warning: " + watijLibDir + " does not exist");
    } else {
        watijFiles = new ArrayList();
        watijFiles.addAll(Arrays.asList(watijLibDir.listFiles()));
        watijFiles.add(new File(watijHome + "/watij.jar"));
        out.write(mvn.getPaths(watijFiles, watijHome, "${watij.home}"));
    }
}
out.write("\n");

// ==============================

out.write("runtime.jars=");
out.write(mvn.getPaths(mvn.getFiles(project.getArtifacts()), baseDir, null));
out.write("\n");

// ==============================

out.write("checkstyle.jars=");
out.write(mvn.getPaths(mvn.getFiles("checkstyle", "checkstyle", "4.1"), baseDir, "${m2.repo}"));
out.write("\n");

// ==============================

out.write("emma.jars=");            
emmaDeps = mvn.resolveDependencies("emma", "emma", "2.0.5312");
emmaAntDeps = mvn.resolveDependencies("emma", "emma_ant", "2.0.5312");
emmaDeps.addAll(emmaAntDeps);
out.write(mvn.getPaths(mvn.getFiles(emmaDeps), baseDir, "${m2.repo}"));
out.write("\n");

// ==============================

out.write("jetty.jars=");
jettyDeps = mvn.resolveDependencies("org.mortbay.jetty", "jetty", "6.0.0rc0");
jettyJsp = mvn.getArtifact("org.mortbay.jetty", "jsp-2.1", "6.0.0rc0");
jettyJspApi = mvn.getArtifact("org.mortbay.jetty", "jsp-api-2.1", "6.0.0rc0");
jettyDeps.add(jettyJsp);
jettyDeps.add(jettyJspApi);
out.write(mvn.getPaths(mvn.getFiles(jettyDeps), baseDir, null));
out.write("\n");

// ==============================

out.write("jetty.start=");
jettyStart = mvn.getArtifact("org.mortbay.jetty", "start", "6.0.0rc0");
out.write(mvn.getRelativePath(mvn.resolveArtifact(jettyStart), baseDir));
out.write("\n");

// ==============================

out.close();
